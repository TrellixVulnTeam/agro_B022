{"remainingRequest":"/Users/pavel/Projects/fyas/node_modules/babel-loader/lib/index.js!/Users/pavel/Projects/fyas/node_modules/eslint-loader/index.js??ref--14-0!/Users/pavel/Projects/fyas/src/store/auth.js","dependencies":[{"path":"/Users/pavel/Projects/fyas/src/store/auth.js","mtime":1636448606702},{"path":"/Users/pavel/Projects/fyas/babel.config.js","mtime":1636353948320},{"path":"/Users/pavel/Projects/fyas/node_modules/cache-loader/dist/cjs.js","mtime":1636352989548},{"path":"/Users/pavel/Projects/fyas/node_modules/babel-loader/lib/index.js","mtime":1636352990365},{"path":"/Users/pavel/Projects/fyas/node_modules/eslint-loader/index.js","mtime":1636352989599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYXZlbC9Qcm9qZWN0cy9meWFzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvcGF2ZWwvUHJvamVjdHMvZnlhcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlcic7IC8vIGltcG9ydCBfIGZyb20gJ2xvZGFzaCcKCnZhciBVc2VyID0gZnVuY3Rpb24gVXNlcihpZCkgewogIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVc2VyKTsKCiAgaWQgPSBwYXJzZUludChpZCk7CiAgdGhpcy5pZCA9IGlkOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiB7CiAgICB1c2VyOiBudWxsCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUudXNlciA9IHBheWxvYWQ7CiAgICB9LAogICAgc2V0VXNlckRhdGE6IGZ1bmN0aW9uIHNldFVzZXJEYXRhKHN0YXRlLCB1c2VyRGF0YSkgewogICAgICBjb25zb2xlLmxvZyh1c2VyRGF0YSk7CiAgICAgIGxvY2FsU3RvcmFnZS50b2tlbiA9IHVzZXJEYXRhLnRva2VuOwogICAgICB2YXIgYmFzZTY0VXJsID0gdXNlckRhdGEudG9rZW4uc3BsaXQoJy4nKVsxXTsKICAgICAgdmFyIGJhc2U2NCA9IGJhc2U2NFVybC5yZXBsYWNlKCctJywgJysnKS5yZXBsYWNlKCdfJywgJy8nKTsKICAgICAgdmFyIGVuY1Rva2VuID0gSlNPTi5wYXJzZSh3aW5kb3cuYXRvYihiYXNlNjQpKTsKICAgICAgbG9jYWxTdG9yYWdlLmV4cCA9IGVuY1Rva2VuLmV4cDsKICAgICAgbG9jYWxTdG9yYWdlLnVzZXJfbmFtZSA9IGVuY1Rva2VuLlBheWxvYWQudXNlcl9uYW1lOwogICAgICBsb2NhbFN0b3JhZ2UudXNlcl9pZCA9IGVuY1Rva2VuLlBheWxvYWQudXNlcl9pZDsKICAgICAgbG9jYWxTdG9yYWdlLnJvbGUgPSBlbmNUb2tlbi5QYXlsb2FkLnJvbGU7CiAgICAgIGxvY2FsU3RvcmFnZS5jb21wYW55ID0gZW5jVG9rZW4uUGF5bG9hZC5jb21wYW55OwogICAgICBzdGF0ZS51c2VyID0gbmV3IFVzZXIoZW5jVG9rZW4uUGF5bG9hZC51c2VyX2lkKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldFBhc3M6IGZ1bmN0aW9uIGdldFBhc3MoX3JlZiwgZW1haWwpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ3NldExvYWRpbmcnLCB0cnVlKTsKICAgICAgdmFyIHBheWxvYWQgPSB7CiAgICAgICAgY29tcGFueV9zbHVnOiAnZGV2JywKICAgICAgICBlbWFpbDogZW1haWwKICAgICAgfTsKCiAgICAgIHRoaXMuX3ZtLiRodHRwLnBvc3QoJ2F1dGgvbmV3X3Nlc3Npb24nLCBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIGZhbHNlKTsKICAgICAgICBjb21taXQoJ3NldE1lc3NhZ2UnLCByZXNwb25zZS5kYXRhLmh1bWFuX2RhdGEpOwogICAgICAgIHJvdXRlci5wdXNoKCcvc2lnbmluJyk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIGZhbHNlKTsKCiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAgICAgICBjb21taXQoJ3NldEVycm9yJywgZXJyb3IucmVzcG9uc2UuZGF0YS5odW1hbl9kYXRhKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHNpZ25JbjogZnVuY3Rpb24gc2lnbkluKF9yZWYyLCB1c2VyKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIHRydWUpOwoKICAgICAgdGhpcy5fdm0uJGh0dHAucG9zdCgnYXV0aC9nZXRfdG9rZW4nLCB1c2VyKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICBjb21taXQoJ3NldExvYWRpbmcnLCBmYWxzZSk7CiAgICAgICAgY29tbWl0KCdzZXRNZXNzYWdlJywgcmVzcG9uc2UuZGF0YS5odW1hbl9kYXRhKTsKICAgICAgICBjb21taXQoJ3NldFVzZXJEYXRhJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOyAvLyByb3V0ZXIucHVzaCgnLycpCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIGZhbHNlKTsKICAgICAgICBjb21taXQoJ3NldEVycm9yJywgZXJyb3IucmVzcG9uc2UuZGF0YS5odW1hbl9kYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gY2hlY2tUb2tlbjogXy5kZWJvdW5jZShmdW5jdGlvbiAoeyBjb21taXQsIGRpc3BhdGNoIH0sIHJldHJ5UmVxdWVzdCkgewogICAgLy8gICBpZiAoIXRoaXMuX3ZtLiRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24pIHRoaXMuX3ZtLiRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UudG9rZW4KICAgIC8vICAgdGhpcy5fdm0uJGh0dHAKICAgIC8vICAgICAucG9zdCgnYXV0aC9yZWZyZXNoJywgeydyZWZyZXNoJzogbG9jYWxTdG9yYWdlLnJlZnJlc2hfdG9rZW59KS50aGVuKHJlc3BvbnNlID0+IHsKICAgIC8vICAgICAgIGNvbW1pdCgnc2V0VXNlckRhdGEnLCB7cGF5bG9hZDogcmVzcG9uc2UuZGF0YSwgcmV0cnlSZXF1ZXN0fSkKICAgIC8vICAgICB9KQogICAgLy8gICAgIC5jYXRjaCgoKSA9PiB7CiAgICAvLyAgICAgICBkaXNwYXRjaCgnbG9nT3V0JykKICAgIC8vICAgICB9KQogICAgLy8gfSwgNTAwKSwKICAgIGF1dG9Mb2dpblVzZXI6IGZ1bmN0aW9uIGF1dG9Mb2dpblVzZXIoX3JlZjMsIHBheWxvYWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgICBfdGhpcy5fdm0uJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb24uQXV0aG9yaXphdGlvbiA9ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS50b2tlbjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1pdCgnc2V0VXNlcicsIHBheWxvYWQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9nT3V0OiBmdW5jdGlvbiBsb2dPdXQoX3JlZjQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgcm91dGVyLnB1c2goJy9sb2dpbicpOwogICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTsKICAgICAgY29tbWl0KCdzZXRVc2VyJywgbnVsbCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/pavel/Projects/fyas/src/store/auth.js"],"names":["router","User","id","parseInt","state","user","mutations","setUser","payload","setUserData","userData","console","log","localStorage","token","base64Url","split","base64","replace","encToken","JSON","parse","window","atob","exp","user_name","Payload","user_id","role","company","actions","getPass","email","commit","company_slug","_vm","$http","post","then","response","data","human_data","push","catch","error","status","signIn","autoLoginUser","defaults","headers","common","Authorization","logOut","clear","getters"],"mappings":"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","sourcesContent":["import router from '../router'\n// import _ from 'lodash'\nclass User {\n  constructor (id) {\n    id = parseInt(id)\n    this.id = id\n  }\n}\n\nexport default {\n  state: {\n    user: null\n  },\n  mutations: {\n    setUser (state, payload) {\n      state.user = payload\n    },\n    setUserData (state, userData) {\n      console.log(userData)\n      localStorage.token = userData.token\n      var base64Url = userData.token.split('.')[1]\n      var base64 = base64Url.replace('-', '+').replace('_', '/')\n      var encToken = JSON.parse(window.atob(base64))\n      localStorage.exp = encToken.exp\n      localStorage.user_name = encToken.Payload.user_name\n      localStorage.user_id = encToken.Payload.user_id\n      localStorage.role = encToken.Payload.role\n      localStorage.company = encToken.Payload.company\n      state.user = new User(encToken.Payload.user_id)\n    }\n  },\n  actions: {\n    getPass ({commit}, email) {\n      commit('setLoading', true)\n      let payload = {\n        company_slug: 'dev',\n        email\n      }\n      this._vm.$http\n      .post('auth/new_session', payload)\n      .then(response => {\n        commit('setLoading', false)\n        commit('setMessage', response.data.human_data)\n        router.push('/signin')\n      })\n      .catch(error => {\n        commit('setLoading', false)\n        if (error.response.status === 401) {\n          commit('setError', error.response.data.human_data)\n        }\n      })\n    },\n    signIn ({commit}, user) {\n      commit('setLoading', true)\n      this._vm.$http\n      .post('auth/get_token', user)\n      .then(response => {\n        console.log(response)\n        commit('setLoading', false)\n        commit('setMessage', response.data.human_data)\n        commit('setUserData', response.data)\n        console.log('------------------------------')\n        console.log(response.data)\n        // router.push('/')\n      })\n      .catch(error => {\n        commit('setLoading', false)\n        commit('setError', error.response.data.human_data)\n      })\n    },\n    // checkToken: _.debounce(function ({ commit, dispatch }, retryRequest) {\n    //   if (!this._vm.$http.defaults.headers.common.Authorization) this._vm.$http.defaults.headers.common.Authorization = 'Bearer ' + localStorage.token\n    //   this._vm.$http\n    //     .post('auth/refresh', {'refresh': localStorage.refresh_token}).then(response => {\n    //       commit('setUserData', {payload: response.data, retryRequest})\n    //     })\n    //     .catch(() => {\n    //       dispatch('logOut')\n    //     })\n    // }, 500),\n\n    async autoLoginUser ({commit}, payload) {\n      this._vm.$http.defaults.headers.common.Authorization = 'Bearer ' + localStorage.token\n      await commit('setUser', payload)\n    },\n\n    logOut ({commit}) {\n      router.push('/login')\n      localStorage.clear()\n      commit('setUser', null)\n    }\n  },\n\n  getters: {\n    user (state) {\n      return state.user\n    }\n  }\n}\n"]}]}