{"remainingRequest":"/Users/pavel/Projects/fyas/node_modules/babel-loader/lib/index.js!/Users/pavel/Projects/fyas/node_modules/eslint-loader/index.js??ref--14-0!/Users/pavel/Projects/fyas/src/store/auth.js","dependencies":[{"path":"/Users/pavel/Projects/fyas/src/store/auth.js","mtime":1637315161663},{"path":"/Users/pavel/Projects/fyas/babel.config.js","mtime":1636353948320},{"path":"/Users/pavel/Projects/fyas/node_modules/cache-loader/dist/cjs.js","mtime":1636985175876},{"path":"/Users/pavel/Projects/fyas/node_modules/babel-loader/lib/index.js","mtime":1636985176867},{"path":"/Users/pavel/Projects/fyas/node_modules/eslint-loader/index.js","mtime":1636985176070}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYXZlbC9Qcm9qZWN0cy9meWFzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvcGF2ZWwvUHJvamVjdHMvZnlhcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsgLy8gaW1wb3J0IF8gZnJvbSAnbG9kYXNoJwoKdmFyIFVzZXIgPSBmdW5jdGlvbiBVc2VyKGlkKSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXIpOwoKICBpZCA9IHBhcnNlSW50KGlkKTsKICB0aGlzLmlkID0gaWQ7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsKICAgIHVzZXI6IG51bGwKICB9LAogIG11dGF0aW9uczogewogICAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS51c2VyID0gcGF5bG9hZDsKICAgIH0sCiAgICBzZXRVc2VyRGF0YTogZnVuY3Rpb24gc2V0VXNlckRhdGEoc3RhdGUsIHVzZXJEYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKHVzZXJEYXRhKTsKICAgICAgbG9jYWxTdG9yYWdlLmp3dCA9IHVzZXJEYXRhLmp3dDsKICAgICAgdmFyIGJhc2U2NFVybCA9IHVzZXJEYXRhLmp3dC5zcGxpdCgnLicpWzFdOwogICAgICB2YXIgYmFzZTY0ID0gYmFzZTY0VXJsLnJlcGxhY2UoJy0nLCAnKycpLnJlcGxhY2UoJ18nLCAnLycpOwogICAgICB2YXIgZW5jVG9rZW4gPSBKU09OLnBhcnNlKHdpbmRvdy5hdG9iKGJhc2U2NCkpOwogICAgICBsb2NhbFN0b3JhZ2UuZXhwID0gZW5jVG9rZW4uZXhwOwogICAgICBsb2NhbFN0b3JhZ2UudXNlcl9uYW1lID0gZW5jVG9rZW4uUGF5bG9hZC51c2VyX25hbWU7CiAgICAgIGxvY2FsU3RvcmFnZS51c2VyX2lkID0gZW5jVG9rZW4uUGF5bG9hZC51c2VyX2lkOwogICAgICBsb2NhbFN0b3JhZ2Uucm9sZSA9IGVuY1Rva2VuLlBheWxvYWQucm9sZTsKICAgICAgbG9jYWxTdG9yYWdlLmNvbXBhbnkgPSBlbmNUb2tlbi5QYXlsb2FkLmNvbXBhbnk7CiAgICAgIHN0YXRlLnVzZXIgPSBuZXcgVXNlcihlbmNUb2tlbi5QYXlsb2FkLnVzZXJfaWQpOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZ2V0UGFzczogZnVuY3Rpb24gZ2V0UGFzcyhfcmVmLCBlbWFpbCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIHRydWUpOwogICAgICB2YXIgcGF5bG9hZCA9IHsKICAgICAgICBjb21wYW55X3NsdWc6ICdkZXYnLAogICAgICAgIGVtYWlsOiBlbWFpbAogICAgICB9OwoKICAgICAgdGhpcy5fdm0uJGh0dHAucG9zdCgnYXV0aC9uZXdfc2Vzc2lvbicsIHBheWxvYWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29tbWl0KCdzZXRMb2FkaW5nJywgZmFsc2UpOwogICAgICAgIGNvbW1pdCgnc2V0TWVzc2FnZScsIHJlc3BvbnNlLmRhdGEuaHVtYW5fZGF0YSk7CiAgICAgICAgcm91dGVyLnB1c2goJy9zaWduaW4nKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29tbWl0KCdzZXRMb2FkaW5nJywgZmFsc2UpOwoKICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHsKICAgICAgICAgIGNvbW1pdCgnc2V0RXJyb3InLCBlcnJvci5kYXRhLmh1bWFuX2RhdGEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc2lnbkluOiBmdW5jdGlvbiBzaWduSW4oX3JlZjIsIHVzZXIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdzZXRMb2FkaW5nJywgdHJ1ZSk7CgogICAgICB0aGlzLl92bS4kaHR0cC5wb3N0KCdhdXRoL2dldF90b2tlbicsIHVzZXIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgbG9jYWxTdG9yYWdlLnVzZXJfZW1haWwgPSB1c2VyLmVtYWlsOwogICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIGZhbHNlKTsKICAgICAgICBjb21taXQoJ3NldE1lc3NhZ2UnLCAn0JLRiyDRg9GB0L/QtdGI0L3QviDQstC+0YjQu9C4INCyINGB0LjRgdGC0LXQvNGDJyk7CiAgICAgICAgY29tbWl0KCdzZXRVc2VyRGF0YScsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgIHJvdXRlci5wdXNoKCcvJyk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICB9LCAxMDApOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb21taXQoJ3NldExvYWRpbmcnLCBmYWxzZSk7CiAgICAgICAgY29tbWl0KCdzZXRFcnJvcicsIGVycm9yLmRhdGEuaHVtYW5fZGF0YSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIGNoZWNrVG9rZW46IF8uZGVib3VuY2UoZnVuY3Rpb24gKHsgY29tbWl0LCBkaXNwYXRjaCB9LCByZXRyeVJlcXVlc3QpIHsKICAgIC8vICAgaWYgKCF0aGlzLl92bS4kaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vbi5BdXRob3JpemF0aW9uKSB0aGlzLl92bS4kaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vbi5BdXRob3JpemF0aW9uID0gJ0JlYXJlciAnICsgbG9jYWxTdG9yYWdlLnRva2VuCiAgICAvLyAgIHRoaXMuX3ZtLiRodHRwCiAgICAvLyAgICAgLnBvc3QoJ2F1dGgvcmVmcmVzaCcsIHsncmVmcmVzaCc6IGxvY2FsU3RvcmFnZS5yZWZyZXNoX3Rva2VufSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAvLyAgICAgICBjb21taXQoJ3NldFVzZXJEYXRhJywge3BheWxvYWQ6IHJlc3BvbnNlLmRhdGEsIHJldHJ5UmVxdWVzdH0pCiAgICAvLyAgICAgfSkKICAgIC8vICAgICAuY2F0Y2goKCkgPT4gewogICAgLy8gICAgICAgZGlzcGF0Y2goJ2xvZ091dCcpCiAgICAvLyAgICAgfSkKICAgIC8vIH0sIDUwMCksCiAgICBhdXRvTG9naW5Vc2VyOiBmdW5jdGlvbiBhdXRvTG9naW5Vc2VyKF9yZWYzLCBwYXlsb2FkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX3RoaXMuX3ZtLiRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UudG9rZW47CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBjb21taXQoJ3NldFVzZXInLCBwYXlsb2FkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ091dDogZnVuY3Rpb24gbG9nT3V0KF9yZWY0KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgIHJvdXRlci5wdXNoKCcvbG9naW4nKTsKICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7CiAgICAgIGNvbW1pdCgnc2V0VXNlcicsIG51bGwpOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/pavel/Projects/fyas/src/store/auth.js"],"names":["router","User","id","parseInt","state","user","mutations","setUser","payload","setUserData","userData","console","log","localStorage","jwt","base64Url","split","base64","replace","encToken","JSON","parse","window","atob","exp","user_name","Payload","user_id","role","company","actions","getPass","email","commit","company_slug","_vm","$http","post","then","response","data","human_data","push","catch","error","status","signIn","user_email","setTimeout","location","reload","autoLoginUser","defaults","headers","common","Authorization","token","logOut","clear","getters"],"mappings":"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","sourcesContent":["import router from '@/router'\n// import _ from 'lodash'\nclass User {\n  constructor (id) {\n    id = parseInt(id)\n    this.id = id\n  }\n}\n\nexport default {\n  state: {\n    user: null\n  },\n  mutations: {\n    setUser (state, payload) {\n      state.user = payload\n    },\n    setUserData (state, userData) {\n      console.log(userData)\n      localStorage.jwt = userData.jwt\n      var base64Url = userData.jwt.split('.')[1]\n      var base64 = base64Url.replace('-', '+').replace('_', '/')\n      var encToken = JSON.parse(window.atob(base64))\n      localStorage.exp = encToken.exp\n      localStorage.user_name = encToken.Payload.user_name\n      localStorage.user_id = encToken.Payload.user_id\n      localStorage.role = encToken.Payload.role\n      localStorage.company = encToken.Payload.company\n      state.user = new User(encToken.Payload.user_id)\n    }\n  },\n  actions: {\n    getPass ({commit}, email) {\n      commit('setLoading', true)\n      let payload = {\n        company_slug: 'dev',\n        email\n      }\n      this._vm.$http\n      .post('auth/new_session', payload)\n      .then(response => {\n        commit('setLoading', false)\n        commit('setMessage', response.data.human_data)\n        router.push('/signin')\n      })\n      .catch(error => {\n        commit('setLoading', false)\n        if (error.response.status === 401) {\n          commit('setError', error.data.human_data)\n        }\n      })\n    },\n    signIn ({commit}, user) {\n      commit('setLoading', true)\n      this._vm.$http\n      .post('auth/get_token', user)\n      .then(response => {\n        localStorage.user_email = user.email\n        commit('setLoading', false)\n        commit('setMessage', 'Вы успешно вошли в систему')\n        commit('setUserData', response.data)\n        router.push('/')\n        setTimeout(() => {\n          location.reload()\n        }, 100);\n      })\n      .catch(error => {\n        commit('setLoading', false)\n        commit('setError', error.data.human_data)\n      })\n    },\n    // checkToken: _.debounce(function ({ commit, dispatch }, retryRequest) {\n    //   if (!this._vm.$http.defaults.headers.common.Authorization) this._vm.$http.defaults.headers.common.Authorization = 'Bearer ' + localStorage.token\n    //   this._vm.$http\n    //     .post('auth/refresh', {'refresh': localStorage.refresh_token}).then(response => {\n    //       commit('setUserData', {payload: response.data, retryRequest})\n    //     })\n    //     .catch(() => {\n    //       dispatch('logOut')\n    //     })\n    // }, 500),\n\n    async autoLoginUser ({commit}, payload) {\n      this._vm.$http.defaults.headers.common.Authorization = 'Bearer ' + localStorage.token\n      await commit('setUser', payload)\n    },\n\n    logOut ({commit}) {\n      router.push('/login')\n      localStorage.clear()\n      commit('setUser', null)\n    }\n  },\n\n  getters: {\n    user (state) {\n      return state.user\n    }\n  }\n}\n"]}]}